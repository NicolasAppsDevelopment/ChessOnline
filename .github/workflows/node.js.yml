# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: "*"
  pull_request:
    branches: [ "main" ]

env:
    DOCKER_IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/chess-online-back:${{ github.ref_name }}-latest

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    - name: Install and build
      working-directory: ./server
      run: |
        npm ci
        npm run generate
        npm run build --if-present
    - name: Run linter
      working-directory: ./server
      run: npm run lint
      continue-on-error: true
    - name: Run typecheck
      working-directory: ./server
      run: npm run typecheck
      continue-on-error: true
    - name: Build and push Docker image
      working-directory: ./server
      run: |
        
        docker build -t ${{ env.DOCKER_IMAGE_NAME }} .
        docker push ${{ env.DOCKER_IMAGE_NAME }}
